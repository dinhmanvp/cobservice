spring:
  application:
    name: cobgateway
  data:
#config mongo DB log
    mongodb:
      host: 192.168.100.201
      port: 27017
      username: cobdblog
      password: cobdblog
      database: cobdblog
      authentication-database: cobdblog      
      collectionrefix: gateway_
      collectiondetailrefix: gateway_detail_
#config postgresql DB 
  datasource:
    url: jdbc:postgresql://192.168.100.201:5432/cob
    username: dbcob
    password: 123456
  jpa:
    properties:
      hibernate:
        default_schema: mdl_gateway
        temp:
          use_jdbc_metadata_defaults: false
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
#    database-platform:  org.hibernate.dialect.PostgreSQL95Dialect
#    show-sql: true
  jmx:
    enabled: false
  
  cloud:
    bus:
      enabled: false
    config:
      enabled: false
info:
  component: Edge Server
  
endpoints:
  restart:
    enabled: true
#  shutdown:
#    enabled: true
  refresh:
    enabled: true
#  health:
#    sensitive: false

zuul:
  prefix: /api/v1
  routes:
    accounts: 
      path: /**
# serviceId as registed with Eureka. Enabled and used when ribbon.eureka.enabled is true
 #     serviceId: customersmanagement  host:    socket-timeout-millis: 160000000
# zuul.routes.<the route>.url used when ribbon.eureka.enabled is false, serviceId is disabled.
#      url: http://localhost:8600/
# stripPrefix set to true if context path is set to /
#      stripPrefix: true

# ribbon.eureka.enabled: false
#ribbon:
#  eureka:
#    enabled: true

eureka:
  client:
    serviceUrl:
#local
      defaultZone: ${DISCOVERY_URL:http://localhost:8761}/eureka/
#      defaultZone: ${DISCOVERY_URL:http://localhost:8761/cobregister}/eureka/
#dev
#       defaultZone: http://192.168.100.201:8761/eureka/
    registerWithEureka: false
    fetchRegistry: true
    registry-fetch-interval-seconds: 5
  instance:
    hostname: localhost
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 5
    
server:
  port: 8990
jwt:
  security:
    key: j3H5Ld5nYmGWyULy6xwpOgfSH++NgKXnJMq20vpfd+8=t
hystrix: 
  command:
    default: 
      execution:
        timeout:
          enabled: false
          
feign:
  client:
    config: 
      default:
        connectTimeout: 160000000
        readTimeout: 160000000
ribbon:
  ReadTimeout: 160000000               # (1)       